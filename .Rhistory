theme(plot.margin = unit(c(5.5, 5.5, 10,5.5 ), "pt") ) +
MSC_DMSO_points +
geom_text(data = MSC_DMSO_ttest,
aes(y=Culture, label= paste("T-test, p=", p)),
x=0.9, hjust=1, size= cex_text_plot) +
pp_sra +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
text_size +
protection_apoptosis_ordered_by_viability +
ylab("Percentage alive cells") +
pp_sra +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Patients") +
margin_and_textsize +
plot_layout(design = layout_spont) +
plot_annotation(tag_levels = "a" )
ggsave(height = 10, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.pdf", device = "pdf")
distribution_absolute_viabilities_cultures +
annotate(x=0.2, y=2.2, geom= "text",
label=paste("T-test, p=",
compare_means(DMSO_viability_mean ~ Culture,
distribution_absolute_viabilities_cultures$data,
paired = TRUE,
method = "t.test")$p.format  ), size=cex_text_plot ) +
pp_sra +
theme(plot.margin = unit(c(5.5, 5.5, 10,5.5 ), "pt") ) +
MSC_DMSO_points +
geom_text(data = MSC_DMSO_ttest,
aes(y=Culture, label= paste("T-test, p=", p)),
x=0.9, hjust=1, size= cex_text_plot) +
pp_sra +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
text_size +
protection_apoptosis_ordered_by_viability +
ylab("Percentage alive cells") +
pp_sra +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Patients") +
margin_and_textsize +
plot_layout(design = layout_spont) +
plot_annotation(tag_levels = "a" ) &
theme(legend.position = "top")
ggsave(height = 15, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.pdf", device = "pdf")
distribution_absolute_viabilities_cultures +
annotate(x=0.2, y=2.2, geom= "text",
label=paste("T-test, p=",
compare_means(DMSO_viability_mean ~ Culture,
distribution_absolute_viabilities_cultures$data,
paired = TRUE,
method = "t.test")$p.format  ), size=cex_text_plot ) +
pp_sra +
theme(plot.margin = unit(c(5.5, 5.5, 10,5.5 ), "pt") ) +
MSC_DMSO_points +
geom_text(data = MSC_DMSO_ttest,
aes(y=Culture, label= paste("T-test, p=", p)),
x=0.9, hjust=1, size= cex_text_plot) +
pp_sra +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
protection_apoptosis_ordered_by_viability +
ylab("Percentage alive cells") +
pp_sra +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Patients") +
margin_and_textsize +
plot_layout(design = layout_spont) +
plot_annotation(tag_levels = "a" ) &
theme(legend.position = "top") &
text_size
ggsave(height = 15, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.pdf", device = "pdf")
ggsave(height = 12, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.pdf", device = "pdf")
layout_spont <- '
AAA
AAA
AAA
AAA
BBB
CCC
CCC
CCC
'
distribution_absolute_viabilities_cultures +
annotate(x=0.2, y=2.2, geom= "text",
label=paste("T-test, p=",
compare_means(DMSO_viability_mean ~ Culture,
distribution_absolute_viabilities_cultures$data,
paired = TRUE,
method = "t.test")$p.format  ), size=cex_text_plot ) +
pp_sra +
theme(plot.margin = unit(c(5.5, 5.5, 10,5.5 ), "pt") ) +
MSC_DMSO_points +
geom_text(data = MSC_DMSO_ttest,
aes(y=Culture, label= paste("T-test, p=", p)),
x=0.9, hjust=1, size= cex_text_plot) +
pp_sra +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
protection_apoptosis_ordered_by_viability +
ylab("Percentage alive cells") +
pp_sra +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Patients") +
margin_and_textsize +
plot_layout(design = layout_spont) +
plot_annotation(tag_levels = "a" ) &
theme(legend.position = "top") &
text_size
distribution_absolute_viabilities_cultures +
annotate(x=0.2, y=2.2, geom= "text",
label=paste("T-test, p=",
compare_means(DMSO_viability_mean ~ Culture,
distribution_absolute_viabilities_cultures$data,
paired = TRUE,
method = "t.test")$p.format  ), size=cex_text_plot ) +
pp_sra +
theme(plot.margin = unit(c(5.5, 5.5, 10,5.5 ), "pt") ) +
MSC_DMSO_points +
geom_text(data = MSC_DMSO_ttest,
aes(y=Culture, label= paste("T-test, p=", p)),
x=0.9, hjust=1, size= cex_text_plot) +
pp_sra +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
protection_apoptosis_ordered_by_viability +
ylab("Percentage alive cells") +
pp_sra +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Patients") +
margin_and_textsize +
plot_layout(design = layout_spont) +
plot_annotation(tag_levels = "a" ) &
theme(legend.position = "right") &
text_size
ggsave(height = 15, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.pdf", device = "pdf")
ggsave(height = 20, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.pdf", device = "pdf")
layout_spont <- '
AAA
AAA
AAA
AAA
BBB
CCC
CCC
CCC
CCC
'
distribution_absolute_viabilities_cultures +
annotate(x=0.2, y=2.2, geom= "text",
label=paste("T-test, p=",
compare_means(DMSO_viability_mean ~ Culture,
distribution_absolute_viabilities_cultures$data,
paired = TRUE,
method = "t.test")$p.format  ), size=cex_text_plot ) +
pp_sra +
theme(plot.margin = unit(c(5.5, 5.5, 10,5.5 ), "pt") ) +
MSC_DMSO_points +
geom_text(data = MSC_DMSO_ttest,
aes(y=Culture, label= paste("T-test, p=", p)),
x=0.9, hjust=1, size= cex_text_plot) +
pp_sra +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
protection_apoptosis_ordered_by_viability +
ylab("Percentage alive cells") +
pp_sra +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Patients") +
margin_and_textsize +
plot_layout(design = layout_spont) +
plot_annotation(tag_levels = "a" ) &
theme(legend.position = "right") &
text_size
ggsave(height = 20, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.pdf", device = "pdf")
distribution_absolute_viabilities_cultures +
annotate(x=0.2, y=2.2, geom= "text",
label=paste("T-test, p=",
compare_means(DMSO_viability_mean ~ Culture,
distribution_absolute_viabilities_cultures$data,
paired = TRUE,
method = "t.test")$p.format  ), size=cex_text_plot ) +
pp_sra +
theme(plot.margin = unit(c(5.5, 5.5, 10,5.5 ), "pt") ) +
MSC_DMSO_points +
geom_text(data = MSC_DMSO_ttest,
aes(y=Culture, label= paste("T-test, p=", p)),
x=0.9, hjust=1, size= cex_text_plot) +
pp_sra +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
protection_apoptosis_ordered_by_viability +
ylab("Percentage alive cells") +
pp_sra +
theme(axis.text.x = element_blank()) +
xlab("Patients") +
margin_and_textsize +
plot_layout(design = layout_spont) +
plot_annotation(tag_levels = "a" ) &
theme(legend.position = "right") &
text_size
ggsave(height = 20, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.pdf", device = "pdf")
distribution_absolute_viabilities_cultures +
annotate(x=0.2, y=2.2, geom= "text",
label=paste("T-test, p=",
compare_means(DMSO_viability_mean ~ Culture,
distribution_absolute_viabilities_cultures$data,
paired = TRUE,
method = "t.test")$p.format  ), size=cex_text_plot ) +
pp_sra +
theme(plot.margin = unit(c(5.5, 5.5, 10,5.5 ), "pt") ) +
MSC_DMSO_points +
geom_text(data = MSC_DMSO_ttest,
aes(y=Culture, label= paste("T-test, p=", p)),
x=0.9, hjust=1, size= cex_text_plot) +
pp_sra +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
protection_apoptosis_ordered_by_viability +
ylab("Absolute viability of DMSO controls") +
pp_sra +
theme(axis.text.x = element_blank()) +
xlab("Patients") +
margin_and_textsize +
plot_layout(design = layout_spont) +
plot_annotation(tag_levels = "a" ) &
theme(legend.position = "right") &
text_size
ggsave(height = 20, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.pdf", device = "pdf")
ggsave(height = 15, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.png", device = "png")
distribution_absolute_viabilities_cultures +
annotate(x=0.2, y=2.2, geom= "text",
label=paste("T-test, p=",
compare_means(DMSO_viability_mean ~ Culture,
distribution_absolute_viabilities_cultures$data,
paired = TRUE,
method = "t.test")$p.format  ), size=cex_text_plot ) +
pp_sra +
theme(plot.margin = unit(c(5.5, 5.5, 10,5.5 ), "pt") ) +
MSC_DMSO_points +
geom_text(data = MSC_DMSO_ttest,
aes(y=Culture, label= paste("T-test, p=", p)),
x=0.9, hjust=1, size= cex_text_plot) +
pp_sra +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
protection_apoptosis_ordered_by_viability +
ylab("Absolute viability of DMSO controls") +
pp_sra +
theme(axis.text.x = element_blank()) +
xlab("Patients") +
margin_and_textsize +
plot_layout(design = layout_spont) +
plot_annotation(tag_levels = "a" ) &
theme(legend.position = "right") &
text_size
ggsave(height = 20, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Spontaneous.pdf", device = "pdf")
# Interaction heatmap
Interaction_heatmap_Z + ggtitle("Viability ~ culture + drug + culture:drug") +
annotate(geom = "rect", xmin=1.5,xmax = 2.5, ymin = 27.5, ymax = 28.5, fill="transparent", color="black", size=1) +
annotate(geom = "rect", xmin=2.5,xmax = 3.5, ymin = 13.5, ymax = 14.5, fill="transparent", color="black", size=1) +
annotate(geom = "rect", xmin=2.5,xmax = 3.5, ymin = 0.5, ymax = 1.5, fill="transparent", color="black", size=1) +
#theme(plot.title = element_text(hjust = 1)) +
# Validation MSCs
HS5_JQ1_plot + ggtitle("JQ1 1.5 ÂµM") +
annotate(y=1.2, x=0.5, geom = "text",
label= paste("Z=", round( Interaction_heatmap_Z$data %>%
filter(Drug=="JQ1", conc==2 ) %>% .$Z, 2 ) ,
"\nsig.=", ( Interaction_heatmap_cutoffs$data %>%
filter(Drug=="JQ1", conc==2 ) %>% .$Interaction_sign ),
"\nequ.=", ( Interaction_heatmap_cutoffs$data %>%
filter(Drug=="JQ1", conc==2 ) %>% .$Interaction_TOST )
), hjust=0, size= cex_text_plot, vjust=0 ) +  pp_sra + expand_limits(y=c(0,1.6)) +
theme(axis.title.x = element_blank()) +
MSC_JQ1_plot + ggtitle("JQ1 1.5 ÂµM") +
stat_compare_means(paired = TRUE,
method = "anova",
aes(Culture, log(CLL_viable_Nr_NormToCultureAndPatient) ),
label.y = 1.2, size= cex_text_plot) +  pp_sra + expand_limits(y=c(0,1.2)) +
theme(axis.title.x = element_blank()) +
HS5_Ide_plot + ggtitle("Idelalisib 9 ÂµM") +
annotate(y=1.2, x=0.5, geom = "text",
label= paste("Z=", round( Interaction_heatmap_Z$data %>%
filter(Drug=="Idelalisib", conc==3 ) %>% .$Z, 2 ) ,
"\nsig.=", ( Interaction_heatmap_cutoffs$data %>%
filter(Drug=="Idelalisib", conc==3 ) %>% .$Interaction_sign ),
"\nequ.=", ( Interaction_heatmap_cutoffs$data %>%
filter(Drug=="Idelalisib", conc==3 ) %>% .$Interaction_TOST )
), hjust=0, size= cex_text_plot, vjust=0 ) +  pp_sra + expand_limits(y=c(0,1.6)) +
theme(axis.title.x = element_blank()) +
MSC_Ide_plot + ggtitle("Idelalisib 9 ÂµM") +
stat_compare_means(paired = TRUE,
method = "anova",
aes(Culture, log(CLL_viable_Nr_NormToCultureAndPatient) ),
label.y = 1.2, size= cex_text_plot) +  pp_sra + expand_limits(y=c(0,1.2)) +
theme(axis.title.x = element_blank()) +
HS5_Tofa_plot + ggtitle("Tofacitinib 22.5 ÂµM") +
annotate(y=1.2, x=0.5, geom = "text",
label= paste("Z=", round( Interaction_heatmap_Z$data %>%
filter(Drug=="Tofacitinib", conc==3 ) %>% .$Z, 2 ) ,
"\nsig.=", ( Interaction_heatmap_cutoffs$data %>%
filter(Drug=="Tofacitinib", conc==3 ) %>% .$Interaction_sign ),
"\nequ.=", ( Interaction_heatmap_cutoffs$data %>%
filter(Drug=="Tofacitinib", conc==3 ) %>% .$Interaction_TOST )
), hjust=0, size= cex_text_plot, vjust=0 ) +   pp_sra + expand_limits(y=c(0,1.6)) +
theme(axis.title.x = element_blank()) +
MSC_Tofa_plot + ggtitle("Tofacitinib 22.5 ÂµM") +
stat_compare_means(paired = TRUE,
method = "anova",
aes(Culture, log(CLL_viable_Nr_NormToCultureAndPatient) ),
label.y = 1.2, size= cex_text_plot) +   pp_sra + expand_limits(y=c(0,1.2)) +
theme(axis.title.x = element_blank()) +
plot_layout(design = layout_interaction)+
plot_annotation(tag_levels = "a" ) &
theme(legend.position = "none", plot.title = element_text(face = "bold") ) &
margin_and_textsize &
scale_x_discrete( labels=c("Mono-culture"="CLL", "Co-culture"="CLL+\nHS-5",
"Co-culture_1"="CLL+\nMSC1","Co-culture_2"="CLL+\nMSC2",
"Co-culture_3"="CLL+\nMSC3", "1"="1", "2"="2", "3"="3") )
ggsave(height = 20, units = "cm", width = 20,
filename = "/Users/sophierabe/Desktop/PhD/Paper/CoCultureDrugScreen/Figures/Interaction.pdf", device = "pdf")
layout_drugs <- '
XXXX
XXXX
ABCD
'
MonoCulture_ibrutinib_IGHV + ggtitle("Mono-culture ~ ibrutinib")  +
scale_x_discrete("IGHV", labels=c("0"="U-CLL", "1"="M-CLL")) +
scale_fill_manual(values = colors_mut_mono) +
CoCulture_ibrutinib_IGHV + ggtitle("Co-culture ~ ibrutinib") +
scale_x_discrete("IGHV", labels=c("0"="U-CLL", "1"="M-CLL")) +
scale_fill_manual(values = colors_mut_co) +
MonoCulture_Nutlin_TP53 + ggtitle("Mono-culture ~ nutlin 3a") +
scale_x_discrete("TP53", labels=c("0"="wt", "1"="mut")) +
scale_fill_manual(values = colors_mut_mono) +
CoCulture_Nutlin_TP53 + ggtitle("Co-culture ~ nutlin 3a") +
scale_x_discrete("TP53", labels=c("0"="wt", "1"="mut")) +
scale_fill_manual(values = colors_mut_co) +
plot_layout(design = layout_drugs) +
plot_annotation(tag_levels = "a" ) &
#coord_cartesian(ylim=c(0,1.7)) &
expand_limits(y=c(0,1.5)) &
pp_sra &
theme(legend.position = "none", plot.title = element_text(face = "bold", hjust = 0) ) &
margin_and_textsize &
#scale_fill_manual(values = rev(colors_mut)) &
ylab("Percentage alive cells normalised to \nsolvent control of respective culture") &
stat_compare_means(hide.ns = FALSE, size = cex_text_plot)
library(shiny); runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
# Chunk 1: load packages
library(plyr)
library(gtools)
library(MultiAssayExperiment)
library(openxlsx)
library(cowplot)
library(grid)
library(RColorBrewer)
library(pheatmap)
library(progress)
library(Matrix)
library(Hmisc)
library(lemon)
library(ggpubr)
library(effsize)
library(ggbeeswarm)
library(ggpmisc)
library(ggrepel)
library(TOSTER)
library(tidyverse)
library(PharmacoGx)
# Chunk 2: Paths
## Path to write objects to
object_destination_path <- '/Volumes/sd17b003/Sophie/Analysis/Screen_analysis/Robjects'
mae_path <- "/Volumes/sd17b003/Sophie/Analysis/Screen_analysis_mae/Robjects"
# Chunk 3: load meta data
source("/Volumes/sd17b003/Sophie/Analysis/Screen_analysis/Figure_layouts_CoCulture.R")
# Chunk 4
load( file.path(mae_path, "multiomics_MAE_CLL_coculture.RData") )
# Chunk 5: format mae
scrn_viability_norm_df_meta_pat_mae <-
left_join(
left_join(
(left_join(
longFormat(multiomics_MAE_CLL_coculture[, , c( "screen_df_co_raw", "screen_df_mono_raw")]) %>% as_tibble(),
wideFormat(multiomics_MAE_CLL_coculture[, , c( "chrom_abber", "SNPs", "health_record_bin")],
colDataCols = c("gender" )) %>% as_tibble(),
by= "primary") %>%
mutate( assay = gsub("screen_df_", "", assay )) %>%
mutate( assay = capitalize(gsub("_raw", "-culture", assay ))) %>%
dplyr::rename(CLL_viable_percent = value ) ) ,
(longFormat(multiomics_MAE_CLL_coculture[, , c( "screen_df_co_normMono", "screen_df_mono_norm")]) %>% as_tibble() %>%
mutate( assay = gsub("screen_df_", "", assay )) %>%
mutate( assay = capitalize(gsub("_normMono|_norm", "-culture", assay ))) %>%
dplyr::rename(CLL_viable_percent_normtoMono = value) ) ),
(longFormat(multiomics_MAE_CLL_coculture[, , c( "screen_df_co_norm", "screen_df_mono_norm")]) %>% as_tibble() %>%
mutate( assay = gsub("screen_df_", "", assay )) %>%
mutate( assay = capitalize(gsub("_norm", "-culture", assay ))) %>%
dplyr::rename(CLL_viable_percent_normtoCulture = value) )
) %>%
dplyr::rename(patient_ID=colname,  screen_ID=primary, Culture=assay  )
scrn_viability_norm_df_meta_pat_mae <- scrn_viability_norm_df_meta_pat_mae %>%
separate(rowname, into = c("Drug", "Concentration_step"), sep = "_" ) %>%
filter(!Concentration_step %in% c("CoCulture", "MonoCulture", "diff" ))
colnames(scrn_viability_norm_df_meta_pat_mae) <-
gsub("chrom_abber_|SNPs_|health_record_bin_", "",
colnames(scrn_viability_norm_df_meta_pat_mae))
scrn_viability_norm_df_meta_pat_mae <-
scrn_viability_norm_df_meta_pat_mae %>%
mutate_at(.vars = vars(
scrn_viability_norm_df_meta_pat_mae %>% select(gender:treated) %>% colnames() ), .funs = as.factor) %>%
mutate(Norm_Mono_ctrl = CLL_viable_percent/CLL_viable_percent_normtoMono,
Norm_Culture_ctrl = CLL_viable_percent/CLL_viable_percent_normtoCulture)
scrn_viability_norm_df_meta_pat_mae
# Chunk 6: NotnormLine prep
# Add DMSO controls to each drug in new data frame
scrn_viability_norm_df_meta_plus_mae <-
bind_rows(scrn_viability_norm_df_meta_pat_mae,
left_join(
scrn_viability_norm_df_meta_pat_mae %>%
filter(Concentration_step!=0) %>%
dplyr::select(patient_ID, Culture, Drug) %>%
unique,
scrn_viability_norm_df_meta_pat_mae %>%
filter(Concentration_step==0) %>%
dplyr::select(patient_ID, Culture,
Concentration_step, CLL_viable_percent))
)
# Chunk 7
scrn_viability_norm_df_meta_pat <-
scrn_viability_norm_df_meta_pat_mae
scrn_viability_norm_df_meta_plus <-
scrn_viability_norm_df_meta_plus_mae
Extract.Cox <- function(x)
{
x <- summary(x)
p.value<-signif(x$coefficients[1, 5], digits=2)
beta<-signif(x$coefficients[1, 1], digits=2);#coeficient beta
HR <-signif(x$coefficients[1, 2], digits=2);#exp(beta)
wald.test<-signif(x$waldtest["test"], digits=2)
HR.confint.lower <- signif(x$conf.int[1 ,"lower .95"], 2)
HR.confint.upper <- signif(x$conf.int[1 ,"upper .95"], 2)
HR <- paste0(HR, " (",
HR.confint.lower, "-", HR.confint.upper, ")")
res<-c(beta, HR, wald.test, p.value)
names(res)<-c("beta", "HR (95% CI for HR)", "wald.test",
"p.value")
return(res)
}
Calc.Cox <- function(formula, covariates, dataframe, MultiVars=NULL) {
if(!is_empty(MultiVars)) {z <- paste(" +", MultiVars, collapse="")}
else{z <-  NULL}
# Define formulas for univariate model
cox_formulas <- sapply(covariates,
function(y) as.formula(paste(formula, y, z)))
# Calculate univariate model for all formulas
cox_models <- lapply(cox_formulas,
function(z){coxph(z, data = dataframe)})
# Extract data from summary objects
cox_results <- lapply(cox_models, Extract.Cox)
# Transform data to data frame
results <- t(as.data.frame(cox_results, check.names = FALSE)) %>%
as.data.frame()
results$p.value <- as.character(results$p.value) %>% as.numeric()
results$p.value_adj <- p.adjust(results$p.value, method = "BH")
return(results)
}
Results <- list()
# Protein
prot <- multiomics_MAE_CLL_coculture@ExperimentList$proteomics
# Remove all proteins which harbor any NA
prot <- prot[rowSums(is.na(prot))==0, ]
# Remove '-' as it makes problems in formula objects
rownames(prot) <- gsub(rownames(prot), pattern = "-", replacement = "_")
# Drug Response
DrugResp <- multiomics_MAE_CLL_coculture@ExperimentList$screen_df_co_norm
df <- as.data.frame(colData(multiomics_MAE))
df_coldata <- as.data.frame(colData(multiomics_MAE_CLL_coculture))
df_coldata
# Calculate observation time
df_coldata$ObsTime <-  difftime(df_coldata$date_follow_up, df_coldata$sampleDate, units = "days")
library(shiny); runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
####### Setup
library(shiny)
library(tidyverse)
library(plotly)
select <- dplyr::select
#Time_series_orig <- read_delim("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv", delim = ",")
Time_series_orig <- read_delim("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv", delim = ",")
Time_series_orig
#Time_series_deaths_orig <- read_delim("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv", delim = ",")
Time_series_deaths_orig <- read_delim("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv", delim = ",")
Time_series_deaths_orig
School_closures <- read_delim("https://en.unesco.org/sites/default/files/covid_impact_education.csv", delim= ",")
School_closures <- read_delim("https://en.unesco.org/sites/default/files/covid_impact_education.csv", delim= ",")
School_closures
library(shiny); runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
library(shiny); runApp('Covid19_app.R')
runApp('Covid19_app.R')
